$schema: 'http://json-schema.org/draft-07/schema#'
definitions:
  AndSchema:
    type: object
    description: an AND relationship between several schemas
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - and
      description:
        type: string
        description: description of the aspect.
      allOf:
        type: array
        description: the set of schemas that this schema is composed of.
        items:
          anyOf:
            - $ref: './schemas.yaml#/definitions/ObjectSchema'
            - $ref: './schemas.yaml#/definitions/AndSchema'
            - $ref: './schemas.yaml#/definitions/OrSchema'
            - $ref: './schemas.yaml#/definitions/DictionarySchema'
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - allOf
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ArraySchema:
    type: object
    description: a Schema that represents and array of values
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - array
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      elementType:
        description: elementType of the array
        $ref: './master.yaml#/definitions/Schema'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      maxItems:
        type: number
        description: maximum number of elements in the array
      minItems:
        type: number
        description: minimum number of elements in the array
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      uniqueItems:
        type: boolean
        description: if the elements in the array should be unique
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - elementType
      - language
      - protocol
      - serialization
      - type
      - uid
  BooleanSchema:
    type: object
    description: a schema that represents a boolean value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - boolean
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ByteArraySchema:
    type: object
    description: a schema that represents a ByteArray value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - byte-array
      format:
        type: string
        description: date-time format
        enum:
          - base64url
          - byte
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - format
      - language
      - protocol
      - serialization
      - type
      - uid
  CharSchema:
    type: object
    description: a schema that represents a Char value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - char
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ChoiceSchema:
    type: object
    description: 'a schema that represents a choice of several values (ie, an ''enum'')'
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - choice
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      choiceType:
        description: the primitive type for the choices
        $ref: './schemas.yaml#/definitions/StringSchema'
      choices:
        type: array
        description: the possible choices for in the set
        items:
          $ref: './schemas.yaml#/definitions/ChoiceValue'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - choiceType
      - choices
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ChoiceType:
    type: object
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: |-
          the schema type
          the schema type
          the schema type
          the schema type
          the schema type
          the schema type
          the schema type
          the schema type
          the schema type
          the schema type
          the schema type
        enum:
          - boolean
          - char
          - credential
          - date
          - date-time
          - duration
          - integer
          - number
          - string
          - unixtime
          - uri
          - uuid
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ChoiceValue:
    type: object
    description: an individual choice in a ChoiceSchema
    properties:
      value:
        type:
          - string
          - number
          - boolean
        description: the actual value
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for this value
        $ref: './master.yaml#/definitions/Languages'
    required:
      - language
      - value
  ConstantSchema:
    type: object
    description: a schema that represents a constant value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - constant
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      constantSchema:
        description: 'the schema type of the constant value (ie, StringSchema, NumberSchema, etc)'
        $ref: './schemas.yaml#/definitions/ConstantType'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      value:
        description: the actual constant value
        $ref: './schemas.yaml#/definitions/ConstantValue'
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - constantSchema
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
      - value
  ConstantType:
    type: object
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        description: the schema type
        $ref: './types.yaml#/definitions/AllSchemaTypes'
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ConstantValue:
    type: object
    description: a container for the actual constant value
    properties:
      value:
        description: the actual constant value to use
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for this value
        $ref: './master.yaml#/definitions/Languages'
    required:
      - language
      - value
  CredentialSchema:
    type: object
    description: a schema that represents a Credential value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - credential
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      maxLength:
        type: number
        description: the maximum length of the string
      minLength:
        type: number
        description: the minimum length of the string
      pattern:
        type: string
        description: a regular expression that the string must be validated against
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  DateSchema:
    type: object
    description: a schema that represents a Date value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - date
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  DateTimeSchema:
    type: object
    description: a schema that represents a DateTime value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - date-time
      format:
        type: string
        description: date-time format
        enum:
          - date-time
          - date-time-rfc1123
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - format
      - language
      - protocol
      - serialization
      - type
      - uid
  DictionarySchema:
    type: object
    description: a schema that represents a key-value collection
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - dictionary
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      elementType:
        description: the element type of the dictionary. (Keys are always strings)
        $ref: './master.yaml#/definitions/Schema'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - elementType
      - language
      - protocol
      - serialization
      - type
      - uid
  DurationSchema:
    type: object
    description: a schema that represents a Duration value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - duration
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  FlagSchema:
    type: object
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        description: the schema type
        $ref: './types.yaml#/definitions/AllSchemaTypes'
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      choices:
        type: array
        description: the possible choices for in the set
        items:
          $ref: './master.yaml#/definitions/FlagValue'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - choices
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  NotSchema:
    type: object
    description: a NOT relationship between schemas
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - not
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      not:
        description: the schema that this may not be.
        $ref: './schemas.yaml#/definitions/Schema'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - not
      - protocol
      - serialization
      - type
      - uid
  NumberSchema:
    type: object
    description: a Schema that represents a Number value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - integer
          - number
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      exclusiveMaximum:
        type: boolean
        description: 'if present, the value must be lower than maximum'
      exclusiveMinimum:
        type: boolean
        description: 'if present, the value must be higher than minimum'
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      maximum:
        type: number
        description: 'if present, the value must be lower than or equal to this (unless exclusiveMaximum is true)'
      minimum:
        type: number
        description: 'if present, the value must be highter than or equal to this (unless exclusiveMinimum is true)'
      multipleOf:
        type: number
        description: 'if present, the number must be an exact multiple of this value'
      precision:
        type: number
        description: 'precision (# of bits?) of the number'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - precision
      - protocol
      - serialization
      - type
      - uid
  ODataQuerySchema:
    type: object
    description: a schema that represents a ODataQuery value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - odata-query
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ObjectSchema:
    type: object
    description: a schema that represents a type with child properties.
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - object
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      discriminator:
        description: the definition of the polymorphic descriminator for this type
        $ref: './master.yaml#/definitions/Discriminator'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      maxProperties:
        type: number
        description: maximum number of properties permitted
      minProperties:
        type: number
        description: minimum number of properties permitted
      properties:
        type: array
        description: the collection of properties that are in this object
        items:
          $ref: './master.yaml#/definitions/Property'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  OrSchema:
    type: object
    description: an OR relationship between several schemas
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        description: the schema type
        $ref: './types.yaml#/definitions/AllSchemaTypes'
      description:
        type: string
        description: description of the aspect.
      anyOf:
        type: array
        description: the set of schemas that this schema is composed of. Every schema is optional
        items:
          anyOf:
            - $ref: './schemas.yaml#/definitions/ObjectSchema'
            - $ref: './schemas.yaml#/definitions/AndSchema'
            - $ref: './schemas.yaml#/definitions/OrSchema'
            - $ref: './schemas.yaml#/definitions/DictionarySchema'
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - anyOf
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  ParameterGroupSchema:
    type: object
    description: a schema that represents a set of parameters.
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - parameter-group
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      parameters:
        type: array
        description: the collection of properties that are in this object
        items:
          $ref: './master.yaml#/definitions/Parameter'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - parameters
      - protocol
      - serialization
      - type
      - uid
  Schema:
    type: object
    description: The Schema Object allows the definition of input and output data types.
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        description: the schema type
        $ref: './types.yaml#/definitions/AllSchemaTypes'
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  Schemas:
    type: object
    description: 'the full set of schemas for a given service, categorized into convenient collections'
    properties:
      andCompounds:
        type: array
        items:
          $ref: './schemas.yaml#/definitions/AndSchema'
      choices:
        type: array
        description: 'schemas that represent a set of choices (ie, ''enum'')'
        items:
          $ref: './schemas.yaml#/definitions/ChoiceSchema'
      constants:
        type: array
        description: constant values that are used in models and parameters
        items:
          $ref: './schemas.yaml#/definitions/ConstantSchema'
      dictionaries:
        type: array
        description: schemas that represent key-value dictionaries used in the model.
        items:
          $ref: './schemas.yaml#/definitions/DictionarySchema'
      flags:
        type: array
        items:
          $ref: './schemas.yaml#/definitions/FlagSchema'
      objects:
        type: array
        description: schemas that likely result in the creation of new objects during code generation
        items:
          $ref: './schemas.yaml#/definitions/ObjectSchema'
      orCompounds:
        type: array
        description: 'schemas that construct more complex schemas based on compound construction (ie, allOf, oneOf, anyOf)'
        items:
          $ref: './schemas.yaml#/definitions/OrSchema'
      parameterGroups:
        type: array
        description: groups of parameters that can be built as an object
        items:
          $ref: './schemas.yaml#/definitions/ParameterGroupSchema'
      primitives:
        type: array
        description: primitive schemas that represent things that should be able to be represented without additional classes generated
        items:
          anyOf:
            - $ref: './schemas.yaml#/definitions/NumberSchema'
            - $ref: './schemas.yaml#/definitions/StringSchema'
            - $ref: './schemas.yaml#/definitions/FlagSchema'
            - $ref: './schemas.yaml#/definitions/BooleanSchema'
            - $ref: './schemas.yaml#/definitions/CredentialSchema'
            - $ref: './schemas.yaml#/definitions/UriSchema'
            - $ref: './schemas.yaml#/definitions/UuidSchema'
            - $ref: './schemas.yaml#/definitions/DurationSchema'
            - $ref: './schemas.yaml#/definitions/DateTimeSchema'
            - $ref: './schemas.yaml#/definitions/DateSchema'
            - $ref: './schemas.yaml#/definitions/CharSchema'
            - $ref: './schemas.yaml#/definitions/ByteArraySchema'
            - $ref: './schemas.yaml#/definitions/UnixTimeSchema'
            - $ref: './schemas.yaml#/definitions/ArraySchema'
            - $ref: './schemas.yaml#/definitions/ChoiceSchema'
            - $ref: './schemas.yaml#/definitions/SealedChoiceSchema'
      sealedChoices:
        type: array
        description: schemas that represent a set of choices that are sealed -- that can never have items added to the definition.
        items:
          $ref: './schemas.yaml#/definitions/SealedChoiceSchema'
      xorCompounds:
        type: array
        items:
          $ref: './schemas.yaml#/definitions/XorSchema'
  SealedChoiceSchema:
    type: object
    description: 'a schema that represents a choice of several values (ie, an ''enum'')'
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - sealed-choice
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      choiceType:
        description: the primitive type for the choices
        $ref: './schemas.yaml#/definitions/StringSchema'
      choices:
        type: array
        description: the possible choices for in the set
        items:
          $ref: './schemas.yaml#/definitions/ChoiceValue'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - choiceType
      - choices
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  StringSchema:
    type: object
    description: a Schema that represents a string value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - string
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      maxLength:
        type: number
        description: the maximum length of the string
      minLength:
        type: number
        description: the minimum length of the string
      pattern:
        type: string
        description: a regular expression that the string must be validated against
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  UnixTimeSchema:
    type: object
    description: a schema that represents a UnixTime value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - unixtime
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  UriSchema:
    type: object
    description: a schema that represents a Uri value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - uri
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      maxLength:
        type: number
        description: the maximum length of the string
      minLength:
        type: number
        description: the minimum length of the string
      pattern:
        type: string
        description: a regular expression that the string must be validated against
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  UuidSchema:
    type: object
    description: a schema that represents a Uuid value
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        type: string
        description: the schema type
        enum:
          - uuid
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - protocol
      - serialization
      - type
      - uid
  XorSchema:
    type: object
    description: an XOR relationship between several schemas
    properties:
      $key:
        type: string
        description: common name of the aspect -- in OAI3 this was typically the key in the parent dictionary
      type:
        description: the schema type
        $ref: './types.yaml#/definitions/AllSchemaTypes'
      description:
        type: string
        description: description of the aspect.
      apiVersions:
        type: array
        description: API versions that this applies to. Undefined means all versions
        items:
          $ref: './master.yaml#/definitions/ApiVersion'
      defaultValue:
        description: 'If the value isn''t sent on the wire, the service will assume this'
      deprecated:
        description: 'deprecation information -- ie, when this aspect doesn''t apply and why'
        $ref: './master.yaml#/definitions/Deprecation'
      example:
        description: example information
      externalDocs:
        description: External Documentation Links
        $ref: './master.yaml#/definitions/ExternalDocumentation'
      oneOf:
        type: array
        description: the set of schemas that this must be one and only one of.
        items:
          $ref: './schemas.yaml#/definitions/Schema'
      serialization:
        description: per-serialization information for this Schema
        $ref: './master.yaml#/definitions/SerializationFormats'
      summary:
        type: string
        description: a short description
      uid:
        type: string
      extensions:
        description: additional metadata extensions dictionary
        $ref: './master.yaml#/definitions/Dictionary<any>'
      language:
        description: per-language information for Schema uses SchemaMetadata
        $ref: './master.yaml#/definitions/Languages<SchemaMetadata>'
      protocol:
        description: per-protocol information for this aspect
        $ref: './master.yaml#/definitions/Protocols'
    required:
      - $key
      - description
      - language
      - oneOf
      - protocol
      - serialization
      - type
      - uid
